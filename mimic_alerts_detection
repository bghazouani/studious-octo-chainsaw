mport os
import time
import random
import string
import base64

# Mimic suspicious file operations
def file_operations():
    temp_file = "temp_file_" + ''.join(random.choices(string.ascii_letters, k=5)) + ".txt"
    with open(temp_file, 'w') as f:
        f.write("".join(random.choices(string.ascii_letters + string.digits, k=1000)))
    os.remove(temp_file)

# Mimic suspicious network traffic
def fake_network_traffic():
    dum_data = "SensitiveInformation".encode()
    encoded_data = base64.b64encode(dum_data)
    decoded_data = base64.b64decode(encoded_data)
    print(f"Fake network traffic: {decoded_data}")

# Mimic delayed execution like malware
def delayed_execution():
    delay = random.randint(5, 10)
    print(f"Sleeping for {delay} seconds to mimic malware delay...")
    time.sleep(delay)

# Mimic process spawning
def fake_process_creation():
    for _ in range(3):
        pid = os.fork() if hasattr(os, 'fork') else 0
        if pid == 0:
            print(f"Fake process spawned with PID: {os.getpid()}")
            os._exit(0)

# Randomly execute different suspicious behaviors
def main():
    actions = [file_operations, fake_network_traffic, delayed_execution, fake_process_creation]
    for _ in range(5):
        action = random.choice(actions)
        action()
        time.sleep(random.randint(1, 3))

if __name__ == "__main__":
    print("Executing garbage code for SOC detection...")
    main()
